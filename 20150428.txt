{- DÃ©cimo Trabalho de PLC -}

A. foldr (+).(.).map

(+) :: Num a => a -> a -> a
(.) :: (u -> v) -> (t -> u) -> (t -> v)
map :: (b -> c) -> [b] -> [c]
foldr :: (m -> n -> n) -> n -> m -> n
---------------------------------------------------
B. (\x y z -> foldr z x y).map

map :: (b -> c) -> [b] -> [c]
foldr :: (m -> n -> n) -> n -> m -> n
(.) :: (u -> v) -> (t -> u) -> (t -> v)
---------------------------------------------------
C. map.((.) (foldr (++) (foldr (++) [] [[1], [2]])))

(++) :: [x] -> [x] -> [x]
foldr :: (m -> n -> n) -> n -> m -> n
(.) :: (u -> v) -> (t -> u) -> (t -> v)
map :: (b -> c) -> [b] -> [c]
[1] :: [Int] -> Int -> Int
[2] :: [Int] -> Int -> Int
---------------------------------------------------
D. (foldr).(.)$(!!)

foldr :: (a -> b -> b) -> b -> [a] -> b
. :: (j -> k) -> (i -> j) -> (i -> k)
(.) :: (u -> v) -> (t -> u) -> (t -> v)

u =` (a -> b -> b)
v =` b -> [a] -> b
t =` (j -> k)
u =` (i -> j) -> (i -> k)












